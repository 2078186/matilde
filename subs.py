#sequence_s is a long DNA sequence.
#sequence_t is the substring I want to find within sequence_s.
sequence_s='CGGAGCGCTCGGAGCGTCGCGGAGCGGAGCGGAGCGAAGTCGGAGCGGCAGTTTGCGTCGGAGCGCGGAGCGTCCGGAGCGCGCTCATACTGTCACGGAGCGCCGGAGCGGCGTACGGAGCGACCGGAGCGCGGAGCGCCGCGGAGCGCGTGGTCGGAGCGGCGGAGCGACTAACGGAGCGCGGAGCGATCGGAGCGGTTCGCTCTTCGGAGCGTATCGGAGCGTAGCGGAGCGCGGAGCGCGGAGCGGCGGAGCGGCGGAGCGCGGAGCGTGCGGAGCGGACGACGGAGCGGCCGGAGCGACCACTATAACACACGGAGCGAAGTCGCGGAGCGCGGAGCGTGCACGGAGCGACGGAGCGCACTCGGAGCGTCGGAGCGCTTCGGAGCGAACTCACGGAGCGAAAGCTCGGAGCGCGGAGCGCGGAGCGCCGGAGCGCGGAGCGCGGAGCGCGGAGCGCCTGCACCGGAGCGCATGAATCGGAGCGTAACTCGCGGAGCGCGGAGCGTCGGAGCGCGGAGCGGCGGACGGAGCGGACGGAGCGACATCGGAGCGTTTTCAGGTCGGAGCGCATACGCGCGGAGCGCGGAGCGCGGAGCGGACGTACGGAGCGCCCCTACGGAGCGGCGGAGCGCATCACCCAACGGAGCGCGGAGCGGATGGGTGCGGAGCGCGGAGCGCGCACCCTCTCGGAGCGTGCCGGAGCGCGGAGCGCGGAGCGCGGAGCGCCGGAGCGCGCGGAGCGCGGAGCGGACGGAGCGCCGGAGCGGCCCGGAGCGACGGAGCGTAGACCGGAGCGCACGGAGCGAAAGGCGTACGGAGCGTCGGAGCGGCCGGAGCG'
sequence_t='CGGAGCGCG'
#use a for loop to iterate through the positions in sequence_s.
#iterates through all possible starting positions for the substring sequence_t within sequence_s..
for position in range(len(sequence_s)):
    #sequence_s [position:] extracts a substring from sequence_s starting at the current position.
    #.startswith(sequence_t) checks if this extracted substring starts with sequence_t.
    if sequence_s [position:].startswith(sequence_t):
        print(position+1)#I need to add 1 because python doesn't use 0-based numbering but 1-based numbering for readability.